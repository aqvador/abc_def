---

- name: Run docker compose down -v --remove-orphans
  shell:
    cmd: "docker compose -f docker-compose.yml  down -v --remove-orphans"
    chdir: "{{ project.deploy_path }}"
  ignore_errors: yes

- name: set git tag
  set_fact:
    project:
      git:
        version: "{{ git_version }}"
  when: git_version is defined


- name: Pull repo project {{ project.git.version }}
  git:
    repo: "{{ project.git.link_repo }}"
    dest: "{{ project.deploy_path }}"
    version: "{{ project.git.version }}"
    accept_hostkey: yes
    key_file: /root/.ssh/bitbucket_key
    force: yes

- name: Set user:group to "{{ project.deploy_path }}"
  file:
    path: "{{ project.deploy_path }}/src"
    owner: '82'
    group: '82'
    recurse: yes

- name: chmod to "{{ project.deploy_path }}/docker"
  file:
    path: "{{ project.deploy_path }}/docker"
    mode: '0777'
    recurse: yes

- name: Copy nginx
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: host_nginx.j2, dest: "/etc/nginx/sites-available/{{ inventory_hostname }}" }

- name: Create soft link for virtualhost config
  file:
    path: "/etc/nginx/sites-enabled/{{ inventory_hostname }}"
    state: link
    src: "/etc/nginx/sites-available/{{ inventory_hostname }}"

- include: set_env.yml

- name: Copy docker-compose-prod
  copy:
    remote_src: yes
    src: "{{ project.deploy_path }}/docker-compose-prod.yml"
    dest: "{{ project.deploy_path }}/docker-compose.yml"


- name: Login to registry {{ lookup('env', 'CI_REGISTRY') }}
  docker_login:
    registry: "{{ lookup('env', 'CI_REGISTRY') }}"
    username: "{{ lookup('env', 'CI_REGISTRY_USER') }}"
    password: "{{ lookup('env', 'CI_REGISTRY_PASSWORD') }}"
    reauthorize: yes

- name: Run docker compose down -v --remove-orphans
  shell:
    cmd: "docker compose -f docker-compose.yml  down -v --remove-orphans"
    chdir: "{{ project.deploy_path }}"


- name: Run docker compose pull
  shell:
    cmd: "docker compose -f docker-compose.yml  pull"
    chdir: "{{ project.deploy_path }}"

- name: Run docker compose build
  shell:
    cmd: "docker compose -f docker-compose.yml  build"
    chdir: "{{ project.deploy_path }}"

- name: Run docker compose up -d --force-recreate
  shell:
    cmd: "docker compose -f docker-compose.yml  up -d --force-recreate"
    chdir: "{{ project.deploy_path }}"

- name: prune containers
  shell: docker system prune --all -f
  register: prune_register

- name: print prune containers
  debug:
    msg: "{{ prune_register.stdout_lines }}"


- name: Logout to registry {{ lookup('env', 'CI_REGISTRY') }}
  docker_login:
    state: absent
    registry: "{{ lookup('env', 'CI_REGISTRY') }}"