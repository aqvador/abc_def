---

- name: Deploy data env project
  replace:
    path: "{{ project.deploy_path }}/src/.env.example"
    regexp: "{{ item.from }}"
    replace: "{{ item.to }}"
  with_items:
    - { from: '^YII_DEBUG=.*', to: "YII_DEBUG={{ project.app.debug }}" }
    - { from: '^YII_ENV=.*', to: "YII_ENV={{ project.app.env }}" }
    - { from: '^PROJECT_VERSION=.*', to: "PROJECT_VERSION={{ project.app.PROJECT_VERSION }}" }
    # Для отправки логов с ошибками.
    - { from: '^LOG_TELEGRAM_TOKEN=.*', to: "LOG_TELEGRAM_TOKEN={{ lookup('env', 'TELEGRAM_TOKEN') }}" }
    - { from: '^LOG_TELEGRAM_CHANNEL=.*', to: "LOG_TELEGRAM_CHANNEL={{ lookup('env', 'TELEGRAM_CHANNEL') }}" }
    # Для Базы данных
    - { from: '^DB_SCHEMA=.*', to: "DB_SCHEMA={{ lookup('env', 'DATABASE_SCHEMA') }}" }
    - { from: '^DB_NAME=.*', to: "DB_NAME={{ lookup('env', 'DATABASE_DBNAME') }}" }
    - { from: '^DB_USER=.*', to: "DB_USER={{ lookup('env', 'DATABASE_USER') }}" }
    - { from: '^DB_PASS=.*', to: "DB_PASS={{ lookup('env', 'DATABASE_PASS') }}" }
    # Для глобальных событий
    # Установка доменных значений в окружение
    - { from: '^FULL_DOMAIN_NAME=.*', to: "FULL_DOMAIN_NAME={{ inventory_hostname }}" }
    - { from: '^SHORT_DOMAIN_NAME=.*', to: "SHORT_DOMAIN_NAME={{ inventory_hostname.split('.')[0] }}" }



- name: Deploy data env docker
  replace:
    path: "{{ project.deploy_path }}/.env.example"
    regexp: "{{ item.from }}"
    replace: "{{ item.to }}"
  with_items:
    # Для Базы данных
    - { from: '^DB_NAME=.*', to: "DB_NAME={{ lookup('env', 'DATABASE_DBNAME') }}" }
    - { from: '^DB_USER=.*', to: "DB_USER={{ lookup('env', 'DATABASE_USER') }}" }
    - { from: '^DB_PASS=.*', to: "DB_PASS={{ lookup('env', 'DATABASE_PASS') }}" }
    - { from: '^DB_EXTERNAL_PORT=.*', to: "DB_EXTERNAL_PORT={{ lookup('env', 'DATABASE_EXTERNAL_PORT') }}" }

    - { from: '^DOMAIN=.*', to: "DOMAIN={{ inventory_hostname }}" }

    # Для хостов контейнеров
    - { from: '^HOST_NGINX=.*', to: "HOST_NGINX={{ lookup('env', 'HOST_NGINX') }}" }
    - { from: '^NETWORK=.*', to: "NETWORK={{ lookup('env', 'NETWORK') }}" }
    - { from: '^DOCKER_REGISTRY_HOST=.*', to: "DOCKER_REGISTRY_HOST={{ lookup('env', 'CI_REGISTRY') }}/alltel24/docker/php-8.0" }

- name: Copy Env docker
  copy:
    remote_src: yes
    src: "{{ project.deploy_path }}/.env.example"
    dest: "{{ project.deploy_path }}/.env"

- name: Copy Env project
  copy:
    remote_src: yes
    src: "{{ project.deploy_path }}/src/.env.example"
    dest: "{{ project.deploy_path }}/src/.env"